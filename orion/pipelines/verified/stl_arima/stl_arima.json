{
    "primitives": [
        "mlprimitives.custom.timeseries_preprocessing.time_segments_aggregate",
        "sklearn.impute.SimpleImputer",
        "sklearn.preprocessing.MinMaxScaler",
        "orion.primitives.timeseries_preprocessing.getperiod",
        "orion.primitives.decomposition.decompose",
        "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences",
        "numpy.reshape",
        "statsmodels.tsa.arima_model.Arima",
        "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences",
        "numpy.reshape",
        "statsmodels.tsa.arima_model.Arima",
        "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences",
        "numpy.reshape",
        "statsmodels.tsa.arima_model.Arima",
        "orion.primitives.decomposition.compose",
        "orion.primitives.timeseries_errors.regression_errors",
        "orion.primitives.timeseries_anomalies.find_anomalies"
    ],
    "init_params": {
        "mlprimitives.custom.timeseries_preprocessing.time_segments_aggregate#1": {
            "time_column": "timestamp",
            "interval": 21600,
            "method": "mean"
        },
        "sklearn.preprocessing.MinMaxScaler#1": {
            "feature_range": [
                -1,
                1
            ]
        },
        "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#1": {
            "target_column": 0,
            "window_size": 250
        },
        "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#2": {
            "target_column": 0,
            "window_size": 250
        },
        "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#3": {
            "target_column": 0,
            "window_size": 250
        },
        "numpy.reshape#1": {
            "newshape": [
                -1,
                250
            ]
        },
        "numpy.reshape#2": {
            "newshape": [
                -1,
                250
            ]
        },
        "numpy.reshape#3": {
            "newshape": [
                -1,
                250
            ]
        },
        "statsmodels.tsa.arima_model.Arima#1": {
            "steps": 1
        },
        "statsmodels.tsa.arima_model.Arima#2": {
            "steps": 1
        },
        "statsmodels.tsa.arima_model.Arima#3": {
            "steps": 1
        },
        "orion.primitives.timeseries_anomalies.find_anomalies#1": {
            "fixed_threshold": true
        }
    },
    "input_names": {
        "orion.primitives.timeseries_anomalies.find_anomalies#1": {
            "index": "target_index"
        },
        "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#1": {
            "X": "y_trend"
        },
        "numpy.reshape#1": {
            "y": "y_trend"
        },
        "statsmodels.tsa.arima_model.Arima#1": {
            "X": "y_trend"
        },
        "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#2": {
            "X": "y_resid"
        },
        "numpy.reshape#2": {
            "y": "y_resid"
        },
        "statsmodels.tsa.arima_model.Arima#2": {
            "X": "y_resid"
        },
        "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#3": {
            "X": "y_seasonal"
        },
        "numpy.reshape#3": {
            "y": "y_seasonal"
        },
        "statsmodels.tsa.arima_model.Arima#3": {
            "X": "y_seasonal"
        }
    },
    "output_names": {
        "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#1": {
            "X": "y_trend"
        },
        "numpy.reshape#1": {
            "y": "y_trend"
        },
        "statsmodels.tsa.arima_model.Arima#1": {
            "y": "y_trend"
        },
        "numpy.reshape#2": {
            "y": "y_resid"
        },
        "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#2": {
            "X": "y_resid"
        },
        "statsmodels.tsa.arima_model.Arima#2": {
            "y": "y_resid"
        },
        "mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences#3": {
            "X": "y_seasonal"
        },
        "numpy.reshape#3": {
            "y": "y_seasonal"
        },
        "statsmodels.tsa.arima_model.Arima#3": {
            "y": "y_seasonal"
        },
        "orion.primitives.decomposition.compose#1": {
            "y": "y_hat"
        }
    }
}
